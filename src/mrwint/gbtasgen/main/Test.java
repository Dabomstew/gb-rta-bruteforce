package mrwint.gbtasgen.main;

import java.util.Arrays;

public class Test {

	/**
	 * @param args
	 */
	static Integer[] A = {0x00, 0x44, 0x45, 0xE1, 0xEB, 0xAE};
	static Integer[] B = {
//		0xBC,
		0x00, 0x03, 0x22,
		0x2e,
//		0xc5, 0xcf,
//		0x4f,
//		0xfd, 0xef,
//		0xe2, 0xe4, 0xe8, 0xc9,
		0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
		0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
		0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
		0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,
//		0xc1, 0xe1,
//		0xc2, 0xe2,
//		0xc3, 0xe3,
//		0xc4, 0xe4,
//		0xc7, 0xe7,
//		0xc8, 0xe8,
//		0xc9, 0xe9,
//		0xca, 0xea,
//		0xcb, 0xeb
//		0x10,0x11,0x12,0x16,0x1b,0x1c,0x2,0x3,0x3c,0x3d,0x3e,0x4,0x4a,0x4b,0x4c,0x5d,0x5e,0xa0,0xa1,0xa2,0xae,0xaf,0xb0,0xb1,0xd,0xd0,0xd1,0xda,0xdb,0xde,0xdf,0xe,0xe1,0xe8,0xe9,0xeb,0xee,0xf0,0xfa,0xfb,0xfc,0xfe,0xff,
		};
		static Integer[] C = {0x7f,
		0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
		0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
		0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
		0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9,
		0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6,
		0xe1, 0xe2, 0xe3, 0xe6, 0xe7, 0xea, 0xef,
		0xf1, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,
		};
	public static void main(String[] args) {
		for(int i=0; i<B.length; i++) {
			int a = B[i];
			test(a+a,a,a,"add");
			test(a+a+1,a,a,"adc");
			for(int j=0;j<A.length; j++) {
				int b = A[j];
				test(a+b,a,b,"add");
				test(a+b+1,a,b,"adc");
				test(a-b,a,b,"sub");
				test(a-b-1,a,b,"sbc");
				test(a&b,a,b,"and");
				test(a|b,a,b,"or");
				test(a^b,a,b,"xor");
			}
		}
//		System.out.println();
//		System.out.println();
//		for(int i=0; i<B.length; i++) {
//			int a = B[i];
//			for(int j=0;j<A.length; j++) {
//				int b = A[j];
//				test2(a+b,a,b,"add", a+b>=0x100);
//				test2(a+b+1,a,b,"adc", a+b+1>=0x100);
//				test2(a-b,a,b,"sub", a-b<0);
//				test2(a-b-1,a,b,"sbc", a-b-1<0);
//				test2(a&b,a,b,"and", false);
//				test2(a|b,a,b,"or", false);
//				test2(a^b,a,b,"xor", false);
//			}
//		}
//		System.out.println();
//		System.out.println();
//		for(int i=0; i<B.length; i++) {
//			int b = B[i];
//			for(int j=0;j<C.length; j++) {
//				int c = C[j];
//				test(b-c,b,c,"sub");
//				test(b&c,b,c,"and");
//				test(b|c,b,c,"or");
//			}
//		}
	}
	
	public static void test2(int a, int aa, int bb, String op, boolean carry) {
		String op2 = "("+Integer.toHexString(aa)+" "+op+" "+Integer.toHexString(bb)+") ";
		a &= 0xFF;
//		if(a == 0)
//			return;
		if(a == aa)
			return;
		for(int j=0;j<A.length; j++) {
			int b = A[j];
			test(a+b,a,b,op2+"add",aa);
			if(carry)
				test(a+b+1,a,b,op2+"adc",aa);
			test(a-b,a,b,op2+"sub",aa);
			if(carry)
				test(a-b-1,a,b,op2+"sbc",aa);
			test(a&b,a,b,op2+"and",aa);
			test(a|b,a,b,op2+"or",aa);
			test(a^b,a,b,op2+"xor",aa);
		}
	}
	
	public static void test(int res, int a, int b, String op) {
		test(res, a, b, op, -1);
	}
	public static void test(int res, int a, int b, String op, int aa) {
		res &= 0xFF;
		if(res == 0)
			return;
		if(res == a || res == aa)
			return;
		if(res != 0x3)
			return;
		if(Arrays.asList(B).contains(res))
			System.out.println(Integer.toHexString(a)+" "+op+" "+Integer.toHexString(b)+" = "+Integer.toHexString(res));
	}
}
